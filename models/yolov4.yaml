# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # expand model depth
width_multiple: 1.0  # expand layer channels

# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# yolov4l backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2
   [-1, 1, BottleneckCSP_v4, [64]],
   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4
   [-1, 2, BottleneckCSP_v4, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 5-P3/8
   [-1, 8, BottleneckCSP_v4, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 7-P4/16
   [-1, 8, BottleneckCSP_v4, [512]],
   [-1, 1, Conv, [1024, 3, 2]], # 9-P5/32
   [-1, 4, BottleneckCSP_v4, [1024]],  # 10
  ]

# yolov4l head
# na = len(anchors[0])
head:
  [[-1, 1, Conv, [1024, 1, 1]], # 11
   [-1, 1, Conv, [1024, 3, 1]], # 12
   [-1, 1, Conv, [1024, 1, 1]], # 13
   [-1, 1, SPP, [512]], # 14
   [-1, 1, Conv, [512, 1, 1]], # 15
   [-1, 1, Conv, [512, 3, 1]], # 16
   [-1, 1, Conv, [512, 1, 1]], # 17

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [8, 1, Conv, [256, 1, 1]], # 20 route backbone P4
   [[-1, -2], 1, Concat, [1]], # 21

   [-1, 1, Conv, [256, 1, 1]], # 22
   [-1, 1, Conv, [512, 3, 1]], # 23
   [-1, 1, Conv, [256, 1, 1]], # 24
   [-1, 1, Conv, [512, 3, 1]], # 25
   [-1, 1, Conv, [256, 1, 1]], # 26

   [-1, 1, Conv, [128, 1, 1]],        # 27
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [6, 1, Conv, [128, 1, 1]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],

   [-1, 1, Conv, [128, 1, 1]], # 31
   [-1, 1, Conv, [256, 3, 1]], # 32
   [-1, 1, Conv, [128, 1, 1]], # 33
   [-1, 1, Conv, [256, 3, 1]], # 34
   [-1, 1, Conv, [128, 1, 1]], # 35

   [-1, 1, Conv, [256, 3, 1]],        # 36 output 80x80

   [-2, 1, Conv, [256, 3, 2]],
   [[-1, 26], 1, Concat, [1]],  # cat

   [-1, 1, Conv, [256, 1, 1]], # 39
   [-1, 1, Conv, [512, 3, 1]], # 40
   [-1, 1, Conv, [256, 1, 1]], # 41
   [-1, 1, Conv, [512, 3, 1]], # 42
   [-1, 1, Conv, [256, 1, 1]], # 43

   [-1, 1, Conv, [512, 3, 1]], # 44 output 40x40

   [-2, 1, Conv, [512, 3, 2]],
   [[-1, 17], 1, Concat, [1]],  # cat

   [-1, 1, Conv, [512, 1, 1]], # 47
   [-1, 1, Conv, [1024, 3, 1]], # 48
   [-1, 1, Conv, [512, 1, 1]], # 49
   [-1, 1, Conv, [1024, 3, 1]], # 50
   [-1, 1, Conv, [512, 1, 1]], # 51

   [-1, 1, Conv, [1024, 3, 1]], # 52 output 20x20

   [[36, 44, 52], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
